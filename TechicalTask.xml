<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task SYSTEM "TechTask.dtd">

<TASK>
<TITLE> Техническое задание </TITLE>

<PART>
<SUBTITLE> Наименование </SUBTITLE>
<TEXT> DataBaseEnrollee </TEXT>
</PART>

<PART>
<SUBTITLE> Описание </SUBTITLE>
<TEXT> Реализуемая база данных будет описывать процесс поступления \n\r абитуриентов на образовательные программы по результатам ЕГЭ. Для \n\r каждой образовательной программы определен перечень предметов, по \n\r которым необходимо сдать экзамен, а также определен минимальный \n\r проходной балл по каждому предмету. Количество мест на каждую \n\r образовательную программу ограничено и определяется планом набора. \n\r Выпускник школы, сдавший необходимые предметы и набравший \n\r минимальный проходной балл по каждому из них имеет право подать \n\r документы на соответствующую образовательную программу. Для каждой \n\r образовательной программы формируется список из абитуриентов, \n\r подавших заявление на эту программу, который ранжируется в \n\r соответствие с суммарным количеством баллов, набранных абитуриентом, \n\r за требуемые предметы. На образовательную программу зачисляются \n\r первые по количеству мест, определенному планом набора, \n\r абитуриенты, предоставившие согласие на зачисление. </TEXT>
</PART>

<PART>
<SUBTITLE> Данные </SUBTITLE>
<TEXT> Схема https://dbdesigner.page.link/nLffn6CznHiJkfLX9

База данных будет состоять из 4 основных отношений: enrollee \n\r  (абитуриент), subject (предмет), program (образовательная программа), \n\r department (факультет), а также 3 вспомогательных таблиц: \n\r enrollee_subject, program_subject и program_enrollee, которые \n\r представляют связь между соответствующими отношениями. В отношении \n\r enrollee_subject будет содержаться дополнительный атрибут result, \n\r определяющий количество баллов, которые получил абитуриент по \n\r данному предмету. В отношении program_subject будет содержаться \n\r дополнительный атрибут min_result, определяющий минимальный \n\r проходной балл на образовательную программу по данному предмету. Таким \n\r образом, в базе данных используются 3 связи many-to-many и одна  связь one-to-many. </TEXT>
</PART>

<PART>
<SUBTITLE> Пользовательские роли </SUBTITLE>

<TEXT> Пользователь (абитуриент) может зарегистрироваться и внести информацию \n\r о сданных дисциплинах ЕГЭ и подать заявку на образовательную программу. </TEXT>

<BLIST>
<BRANCH> Гость </BRANCH>
<LIST>
<L> - Просмотр сайта </L>
</LIST>
</BLIST>

<BLIST>
<BRANCH> Пользователь </BRANCH>
<LIST>
<L> - Просмотр сайта </L>
<L> - Редактирование списка сданных дисциплин ЕГЭ </L> 
</LIST>
</BLIST>

<BLIST>
<BRANCH> Администратор </BRANCH>
<LIST>
<L> - Просмотр сайта </L>
<L> - Просмотр и редактирование списка пользователей </L>
<L> - Просмотр и редактирование списка заявок </L>
</LIST>
</BLIST>
</PART>

<PART>
<SUBTITLE> UI/API </SUBTITLE>
<BLIST>
<BRANCH> Страницы </BRANCH>
<LIST>
<L> - Формы регистрации и авторизации </L>
<L> - Личный кабинет абитуриента </L>
<L> - Страница списка образовательных программ </L>
<L> - Кабинет админа </L>
</LIST>
</BLIST>
</PART>

<PART>
<SUBTITLE> Технологии разработки </SUBTITLE>
<BLIST>
<BRANCH> Языки </BRANCH>
<LIST>
<L> - HTML </L>
<L> - CSS </L>
<L> - PHP </L>
</LIST>
</BLIST>

<BLIST>
<BRANCH> СУБД </BRANCH>
<LIST>
<L> - MySQL </L>
</LIST>
</BLIST>
</PART>